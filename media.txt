Create a web application using React js with below problem statements

    1- User can create add delete edit 

    2- The card must contain name and a video / mp3 link

    3- The user has the flexibility to create buckets to categories and card according to his / her choice

    4- User can move a card to different buckets

    5- On clicking on the card a model with an iframe should open which start playing video

    6- User can create and delete a single card or multiple card under a simple bucket at once

    7- There should be a seperate tab called history which list the mp3 /  mp4 links that you have played

            ie, The card name the link and the item was played

                Tech Stack
                ----------

                    1- Front-end     :     react.js
                    2- Back-end      :     create and use json server


Browserrouter is used to change the page
To set path for two or more components we should give it in Routes


Axios library
-------------

    Install Axios library for API call (During api call the the project loading will take too much time .... so Axios library is used )

        Features
        --------

            1-Make XMLHttpRequests from the browser
            2-Make http requests from node.js
            3-Supports the Promise API
            4-Intercept request and response
            5-Transform request and response data
            6-Cancel requests
            7-Automatic transforms for JSON data
            8-Automatic data object serialization to multipart/form-data and x-www-form-urlencoded body encodings
            9-Client side support for protecting against XSRF
            

        Request Configuration for API
        -----------------------------

            These are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.

                1- `url` is the server URL that will be used for the request

                        url: '/user',

                2- `method` is the request method to be used when making the request

                        method: 'get', // default

                3- `headers` are custom headers to be sent ---------(not important)

                        headers: {'X-Requested-With': 'XMLHttpRequest'},

                4- `data` is the data to be sent as the request body

                    Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'

                    When no `transformRequest` is set, must be of one of the following types:

                    string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams

                    Browser only: FormData, File, Blob

                    Node only: Stream, Buffer, FormData (form-data package)

                        data: {
                            firstName: 'Fred'
                        },



**************************************************************************************************************************************************


State lifting ----- Child to child data sharing
props ----- parent to child data sharing


----- create a watch history tab in home page
----- create new component for watch history
        table format (id,cardname,url,date)
----- create a watch history key in db.json and value as array